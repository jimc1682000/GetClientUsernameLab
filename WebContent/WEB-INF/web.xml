<?xml version="1.0" encoding="UTF-8"?>
<!-- Waffle (https://github.com/Waffle/waffle) Copyright (c) 2010-2016 Application 
	Security, Inc. All rights reserved. This program and the accompanying materials 
	are made available under the terms of the Eclipse Public License v1.0 which 
	accompanies this distribution, and is available at https://www.eclipse.org/legal/epl-v10.html. 
	Contributors: Application Security, Inc. -->
<web-app xmlns="https://java.sun.com/xml/ns/javaee" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="https://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<!-- ZK Setting -->
	<display-name>GetClientUsernameLab</display-name>
	<listener>
		<description>
			Used to cleanup when a session is destroyed
		</description>
		<display-name>ZK Session cleaner</display-name>
		<listener-class>org.zkoss.zk.ui.http.HttpSessionListener
		</listener-class>
	</listener>
	<servlet>
		<description>
			The ZK loader for ZUML pages
		</description>
		<servlet-name>zkLoader</servlet-name>
		<servlet-class>org.zkoss.zk.ui.http.DHtmlLayoutServlet</servlet-class>
		<init-param>
			<param-name>update-uri</param-name>
			<param-value>/zkau</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<description>
			The asynchronous update engine for ZK
		</description>
		<servlet-name>auEngine</servlet-name>
		<servlet-class>org.zkoss.zk.au.http.DHtmlUpdateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zul</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zhtml</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>auEngine</servlet-name>
		<url-pattern>/zkau/*</url-pattern>
	</servlet-mapping>

	<!-- Waffle Setting -->
	<filter>
		<filter-name>SecurityFilter</filter-name>
		<filter-class>waffle.servlet.NegotiateSecurityFilter</filter-class>
		<init-param>
			<param-name>principalFormat</param-name>
			<param-value>fqn</param-value>
		</init-param>
		<init-param>
			<param-name>roleFormat</param-name>
			<param-value>both</param-value>
		</init-param>
		<init-param>
			<param-name>allowGuestLogin</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>securityFilterProviders</param-name>
			<param-value>
				waffle.servlet.spi.NegotiateSecurityFilterProvider
				waffle.servlet.spi.BasicSecurityFilterProvider
			</param-value>
		</init-param>
		<init-param>
			<param-name>waffle.servlet.spi.NegotiateSecurityFilterProvider/protocols
			</param-name>
			<param-value>
				Negotiate
				NTLM
			</param-value>
		</init-param>
		<init-param>
			<param-name>waffle.servlet.spi.BasicSecurityFilterProvider/realm
			</param-name>
			<param-value>WaffleFilterDemo</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>SecurityFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Waffle-System Information Helpful for debugging -->
	<servlet>
		<servlet-name>WaffleInfo</servlet-name>
		<servlet-class>waffle.servlet.WaffleInfoServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>WaffleInfo</servlet-name>
		<url-pattern>/WaffleInfo</url-pattern>
	</servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>index.zul</welcome-file>
	</welcome-file-list>
</web-app>
